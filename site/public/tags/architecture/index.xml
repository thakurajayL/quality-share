<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Architecture on Quality Share: A Curated Library for Engineers</title>
    <link>https://thakurajayL.github.io/quality-share/tags/architecture/</link>
    <description>Recent content in Architecture on Quality Share: A Curated Library for Engineers</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 17 Oct 2025 16:45:00 -0700</lastBuildDate>
    <atom:link href="https://thakurajayL.github.io/quality-share/tags/architecture/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Decision: Using SQLite for Pipeline Metadata Persistence</title>
      <link>https://thakurajayL.github.io/quality-share/decisions/using-sqlite-for-pipeline-metadata/</link>
      <pubDate>Fri, 17 Oct 2025 16:45:00 -0700</pubDate>
      <guid>https://thakurajayL.github.io/quality-share/decisions/using-sqlite-for-pipeline-metadata/</guid>
      <description>&lt;h2 id=&#34;context&#34;&gt;Context&lt;/h2&gt;&#xA;&lt;p&gt;The AI-assisted content curation pipeline requires a method to persistently store metadata such as source URLs, last fetch timestamps, and a record of processed article URLs. This is crucial to prevent re-processing content and to manage the pipeline&amp;rsquo;s state effectively.&lt;/p&gt;&#xA;&lt;h2 id=&#34;alternatives-considered&#34;&gt;Alternatives Considered&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;JSON File:&lt;/strong&gt; A simple file-based approach for storing data in JSON format.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Full-fledged Database (e.g., PostgreSQL, MySQL):&lt;/strong&gt; A client-server database system.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Cloud-based Key-Value Store (e.g., AWS DynamoDB, Google Cloud Firestore):&lt;/strong&gt; A managed, serverless database service.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;decision&#34;&gt;Decision&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;SQLite&lt;/strong&gt; was chosen for persistent storage of the pipeline&amp;rsquo;s metadata.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Decision: AI-assisted Content Curation Pipeline with LangChain</title>
      <link>https://thakurajayL.github.io/quality-share/decisions/ai-curation-pipeline-langchain/</link>
      <pubDate>Fri, 17 Oct 2025 16:00:00 -0700</pubDate>
      <guid>https://thakurajayL.github.io/quality-share/decisions/ai-curation-pipeline-langchain/</guid>
      <description>&lt;h2 id=&#34;context&#34;&gt;Context&lt;/h2&gt;&#xA;&lt;p&gt;To fulfill the project&amp;rsquo;s mission of providing a curated platform of high-quality technical content, a scalable and efficient content discovery and summarization mechanism was required. The goal was to leverage AI to assist the human curator, not replace them.&lt;/p&gt;&#xA;&lt;h2 id=&#34;alternatives-considered&#34;&gt;Alternatives Considered&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Purely Manual Curation:&lt;/strong&gt; Relying solely on manual discovery and summarization, which would be time-consuming and limit scalability.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Simple LLM Request/Response Scripts:&lt;/strong&gt; Using basic scripts to interact with LLMs, which would lack the orchestration, modularity, and advanced agentic capabilities offered by a framework.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;decision&#34;&gt;Decision&lt;/h2&gt;&#xA;&lt;p&gt;An &lt;strong&gt;AI-assisted Content Curation Pipeline&lt;/strong&gt; will be implemented, with &lt;strong&gt;LangChain&lt;/strong&gt; chosen as the orchestration framework.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Decision: GitHub Pages and GitHub Actions for Deployment</title>
      <link>https://thakurajayL.github.io/quality-share/decisions/github-pages-actions-deployment/</link>
      <pubDate>Fri, 17 Oct 2025 15:45:00 -0700</pubDate>
      <guid>https://thakurajayL.github.io/quality-share/decisions/github-pages-actions-deployment/</guid>
      <description>&lt;h2 id=&#34;context&#34;&gt;Context&lt;/h2&gt;&#xA;&lt;p&gt;Following the selection of Hugo as the Static Site Generator, a robust and automated deployment strategy was required to publish the website to a live environment. The primary goals were to ensure cost-effectiveness, automation, and high performance for the end-users.&lt;/p&gt;&#xA;&lt;h2 id=&#34;alternatives-considered&#34;&gt;Alternatives Considered&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Manual Deployment:&lt;/strong&gt; Building the Hugo site locally and manually uploading the &lt;code&gt;public/&lt;/code&gt; directory to a web server.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Other Hosting Providers:&lt;/strong&gt; Services like Netlify or Vercel offer similar static site hosting and CI/CD capabilities.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;decision&#34;&gt;Decision&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;GitHub Pages&lt;/strong&gt; was selected for hosting, and &lt;strong&gt;GitHub Actions&lt;/strong&gt; was chosen for automated CI/CD.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Decision: Choosing Hugo as the Static Site Generator</title>
      <link>https://thakurajayL.github.io/quality-share/decisions/choosing-hugo-as-ssg/</link>
      <pubDate>Fri, 17 Oct 2025 15:30:00 -0700</pubDate>
      <guid>https://thakurajayL.github.io/quality-share/decisions/choosing-hugo-as-ssg/</guid>
      <description>&lt;h2 id=&#34;context&#34;&gt;Context&lt;/h2&gt;&#xA;&lt;p&gt;The initial phase of the &amp;lsquo;Quality Share&amp;rsquo; project required the selection of a Static Site Generator (SSG) to build the website. The primary goals were to create a highly performant, maintainable, and scalable platform for curated technical content.&lt;/p&gt;&#xA;&lt;h2 id=&#34;alternatives-considered&#34;&gt;Alternatives Considered&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Jekyll:&lt;/strong&gt; A Ruby-based SSG with native support on GitHub Pages, offering simplicity and ease of initial deployment.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Next.js (Static Export):&lt;/strong&gt; A React-based framework capable of generating static sites, offering a powerful JavaScript ecosystem and component-based development.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;decision&#34;&gt;Decision&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Hugo&lt;/strong&gt; was selected as the Static Site Generator.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
